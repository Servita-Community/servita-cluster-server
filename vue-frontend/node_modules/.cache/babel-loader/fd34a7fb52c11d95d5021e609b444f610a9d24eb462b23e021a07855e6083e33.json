{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport routes from '../routes';\nimport { fetchCameras } from '../apiTools';\nexport default {\n  __name: 'NavbarComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const cameras = ref([]);\n    const leftDrawer = ref(false);\n    const rightDrawer = ref(false);\n    onMounted(async () => {\n      //cameras.value = await fetchCameras()\n    });\n    const __returned__ = {\n      cameras,\n      leftDrawer,\n      rightDrawer,\n      ref,\n      onMounted,\n      get routes() {\n        return routes;\n      },\n      get fetchCameras() {\n        return fetchCameras;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","routes","fetchCameras","cameras","leftDrawer","rightDrawer"],"sources":["/home/nick/Workspace/UbivisionCamFirmware/vue-frontend/src/components/NavbarComponent.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-app-bar app>\n      <v-app-bar-nav-icon @click=\"leftDrawer = !leftDrawer\" class=\"d-flex align-center\"></v-app-bar-nav-icon>\n      <v-spacer />\n      <v-img \n        src=\"../../public/ubihere.webp\" \n        class=\"logo\" \n        width=\"auto\" \n        @click=\"$router.push('/')\"\n        style=\"cursor: pointer;\"\n      ></v-img>\n      <v-spacer />\n      <v-app-bar-nav-icon @click=\"rightDrawer = !rightDrawer\" class=\"d-flex align-center\">\n        <v-icon>mdi-camera</v-icon>\n      </v-app-bar-nav-icon>\n    </v-app-bar>\n\n    <v-navigation-drawer app v-model=\"leftDrawer\">\n      <v-list>\n        <v-list-item\n          v-for=\"route in routes.filter(route => route.path !== '/')\"\n          :key=\"route.path\"\n          :to=\"route.path\"\n          link\n        >\n          <template v-slot:prepend>\n            <v-icon :icon=\"route.icon\"></v-icon>\n          </template>\n          <v-list-item-title v-text=\"route.name\"></v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n\n    <v-navigation-drawer app v-model=\"rightDrawer\" location=\"right\">\n      <v-expansion-panels>\n        <v-expansion-panel\n          v-for=\"camera in cameras\"\n          :key=\"camera.index\"\n        >\n          <v-expansion-panel-title>\n            <span class=\"text-h4 mr-4\">{{ camera.index }}</span>\n            <span>{{ camera.description }}</span>\n            <v-spacer></v-spacer>\n            <v-icon :color=\"camera.active ? 'green' : 'red'\">mdi-circle</v-icon>\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-list>\n              <v-list-item\n                v-for=\"(key, index) in camera\"\n                :key=\"index\"\n                :href=\"'http://' + camera[key].ip\"\n                prepend-icon=\"mdiCameraWireless\"\n              >\n              </v-list-item>\n            </v-list>\n          </v-expansion-panel-text>\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </v-navigation-drawer>\n  </v-container>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport routes from '../routes'\nimport { fetchCameras } from '../apiTools'\n\nconst cameras = ref([])\n\nconst leftDrawer = ref(false)\nconst rightDrawer = ref(false)\n\nonMounted(async () => {\n  //cameras.value = await fetchCameras()\n})\n\n</script>\n\n<style scoped>\n.logo {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n}\n</style>"],"mappings":"AAiEA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,YAAY,QAAQ,aAAa;;;;;;;IAE1C,MAAMC,OAAO,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMK,UAAU,GAAGL,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMM,WAAW,GAAGN,GAAG,CAAC,KAAK,CAAC;IAE9BC,SAAS,CAAC,YAAY;MACpB;IAAA,CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}