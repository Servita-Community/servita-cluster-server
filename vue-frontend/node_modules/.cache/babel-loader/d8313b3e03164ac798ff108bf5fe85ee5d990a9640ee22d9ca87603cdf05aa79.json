{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, {\n      justify: \"center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, {\n        class: \"text-center text-h6\"\n      }, {\n        default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\" Stream Page \")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, {\n        class: \"text-center\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_icon, {\n          color: $setup.isLedOn ? 'green' : 'red'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.isLedOn ? 'mdi-led-on' : 'mdi-led-off'), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"color\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","fluid","default","_withCtx","_createVNode","_component_v_card","justify","_component_v_card_title","class","_cache","_createTextVNode","_","_component_v_card_text","_component_v_icon","color","$setup","isLedOn","_toDisplayString"],"sources":["/home/nick/Workspace/ubivision-cluster-server/vue-frontend/src/components/StreamsComponent.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-card justify=\"center\">\n      <v-card-title class=\"text-center text-h6\">\n        Stream Page\n      </v-card-title>\n      <v-card-text class=\"text-center\">\n        <v-icon :color=\"isLedOn ? 'green' : 'red'\">\n          {{ isLedOn ? 'mdi-led-on' : 'mdi-led-off' }}\n        </v-icon>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\n\nconst isLedOn = ref(false)\n\nconst toggleLed = () => {\n  isLedOn.value = !isLedOn.value\n}\n\nlet intervalId\n\nonMounted(() => {\n  intervalId = setInterval(toggleLed, 1000)\n})\n\nonUnmounted(() => {\n  clearInterval(intervalId)\n})\n</script>\n\n<style scoped>\n</style>"],"mappings":";;;;;;;uBACEA,YAAA,CAWcC,sBAAA;IAXDC,KAAK,EAAL;EAAK;IADpBC,OAAA,EAAAC,QAAA,CAEI,MASS,CATTC,YAAA,CASSC,iBAAA;MATDC,OAAO,EAAC;IAAQ;MAF5BJ,OAAA,EAAAC,QAAA,CAGM,MAEe,CAFfC,YAAA,CAEeG,uBAAA;QAFDC,KAAK,EAAC;MAAqB;QAH/CN,OAAA,EAAAC,QAAA,CAGgD,MAE1CM,MAAA,QAAAA,MAAA,OALNC,gBAAA,CAGgD,eAE1C,E;QALNC,CAAA;UAMMP,YAAA,CAIcQ,sBAAA;QAJDJ,KAAK,EAAC;MAAa;QANtCN,OAAA,EAAAC,QAAA,CAOQ,MAES,CAFTC,YAAA,CAESS,iBAAA;UAFAC,KAAK,EAAEC,MAAA,CAAAC,OAAO;;UAP/Bd,OAAA,EAAAC,QAAA,CAQU,MAA4C,CARtDO,gBAAA,CAAAO,gBAAA,CAQaF,MAAA,CAAAC,OAAO,gD;UARpBL,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}